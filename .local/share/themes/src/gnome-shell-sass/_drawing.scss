@mixin fontsize($size: 24, $base: 16) {
  font-size: round($size) + pt;
}

@mixin entry($t, $fc:$selected_bg_color) {
// $t: entry type
// $fc: focus color
  transition-duration: 250ms;

  @if $t==normal {
    box-shadow: inset 0 0 0 $border_width $border_color;
    background-color: transparentize($fg_color, 0.9);
    color: transparentize($fg_color,0.3);
  }

  @if $t==focus {
    background-color: mix(transparentize($fg_color, 0.8), $selected_bg_color, 95%);
    box-shadow: inset 0 0 0 $selected_border_width $selected_bg_color;
    color: $fg_color;
  }

  @if $t==hover {
    background-color:transparentize($fg_color, 0.8);
    color: inherit;
  }

  @if $t==insensitive {
    background-color:transparentize($insensitive_fg_color, 0.8);
    color: $insensitive_fg_color;
  }
}

// On-screen Keyboard
@mixin keyboard_key($t, $c:$osd_bg_color, $tc:$osd_fg_color) {
  @if $t==normal { @include button(normal) }
  @if $t==focus { @include button(focus) }
  @else if $t==hover { @include button(hover) }
  @else if $t==active { @include button(active) }
  @else if $t==checked { @include button(checked) }
  @else if $t==insensitive { @include button(insensitive) }
  @else if $t==undecorated { @include button(undecorated) }
}

@mixin button($t, $tc:$fg_color, $c:$bg_color, $flat: false) {
  transition-duration: 100ms;

  // normal button
  @if $t==normal {
    color: $fg_color;
    background-color: $widget_bg;
    box-shadow: $border;
    @if $flat {
      background-color: transparent;
      box-shadow: none;
    }
  }

  // hover button
  @else if $t==hover {
    color: $hover_fg;
    background-color: $hover_bg;
    box-shadow: $border;
  }

  // active button
  @else if $t==active {
    color: $selected_fg_color;
    background-color: $selected_bg_color;
    box-shadow: $border;
  }

  // checked button
  @else if $t==checked {
    color: $selected_fg_color;
    background-color: $selected_bg_color;
    &:hover {
      background-color: mix($fg_color, $selected_bg_color, 10%);
    }
    &:active {
      background-color: mix($fg_color, $selected_bg_color, 14%);
    }
  }

  // focused button
  @if $t==focus {
    color: $fg_color;
    background-color: mix($widget_bg, $selected_bg_color, 90%);
    box-shadow: inset 0 0 0 $selected_border_width transparentize($selected_bg_color, 0.4) !important;
    &:hover {
      background-color: mix($widget_bg, $selected_bg_color, 86%);
      box-shadow: inset 0 0 0 $selected_border_width transparentize($selected_bg_color, 0.3) !important;
    }
    &:active {
      background-color: mix($widget_bg, $selected_bg_color, 82%);
      box-shadow: inset 0 0 0 $selected_border_width transparentize($selected_bg_color, 0.3) !important;
    }
  }

  // insensitive button
  @else if $t==insensitive {
    color: transparentize($fg_color, 0.5);
    background-color: transparentize($fg_color, .95);
  }

  // default/suggested button
  @else if $t==default {
    @include button(checked);
    &:focus { @include button(focus) }
    &:insensitive { @include button(insensitive) }
  }

  // reset
  @else if $t==undecorated {
    background-color: transparent;
    box-shadow: none;
    border-color: transparent;
  }
}

// tile
@mixin tile_button($color, $flat: true) {
  @extend %tile;
  @if $flat {
    background-color: transparent;
  } @else {
    @include button(normal);
  }
  &:hover { @include button(hover); }
  &:selected, &:focus {
    @include button(normal);
    &:hover { @include button(hover); }
    &:active { @include button(active); }
  }
  &:active { @include button(active); }
  &:outlined, &:checked {
    @include button(focus);
    &:hover { @include button(hover); }
    &:active { @include button(active); }
  }
  &:drop {
    @include button(focus);
    box-shadow: inset 0 0 0 $selected_border_width $selected_bg_color;
    border: none;
  }
}

// overview icon, dash, app grid
@mixin overview_icon($color, $flat: true, $shadow: false) {
  transition-duration: 400ms;
  .overview-icon { 
    @extend %tile;
  }
  @if $flat {
    .overview-icon { background-color: transparent }
  } @else {
    .overview-icon {  @include button(normal) }
  }

  &:hover .overview-icon { @include button(hover); }
  &:selected .overview-icon,
  &:focus .overview-icon {
    @include button(normal);
    &:hover .overview-icon { @include button(hover); }
    &:active .overview-icon { @include button(active); }
  }
  &:active .overview-icon { @include button(active); }
  &:outlined .overview-icon,
  &:checked .overview-icon {
    @include button(checked);
    &:hover .overview-icon { @include button(hover); }
    &:active .overview-icon { @include button(active); }
  }
  &:drop .overview-icon {
    @include button(focus);
    box-shadow: inset 0 0 0 $selected_border_width $selected_bg_color;
    border: none;
  }

  //app grid
  @if $shadow {
    .overview-icon {
      border: $border_width solid transparent;
      StIcon{ icon-shadow: 2px 2px 4px rgba(0,0,0,0.3); }
    }
    @if $flat {
      .overview-icon { background-color: transparent; }
    } @else {
      .overview-icon {
        box-shadow: $tile_shadow;
        border-color: $border_color;
        background-color: $bg_color;
      }
    }

    &:selected .overview-icon,
    &:focus .overview-icon { background-color: $bg_color; }
    &:hover .overview-icon { background-color: lighten($bg_color, 3%); }
    &:active .overview-icon { @include button(active); }

    &:hover .overview-icon,
    &:selected .overview-icon,
    &:focus .overview-icon,
    &:active .overview-icon,
    &:outlined .overview-icon,
    &:checked .overview-icon {
      box-shadow: $tile_shadow;
      border-color: $border_color;
    }
  }
}

// styling for elements within popovers that look like notifications
@mixin card($flat: false) {
  border-radius: $button_radius;
  margin: $base_margin;

  @if $flat {
    @include button(undecorated);
  } @else {
    @include button(normal);
  }
  &:hover {@include button(hover);}
  &:active {@include button(active);}
  &:focus {@include button(focus);}
}

// styling for all menuitems in popovers
@mixin menuitem($bg, $flat: true) {
  font-weight: normal;
  spacing: $base_padding;
  transition-duration: 100ms;
  padding: $base_padding*1.5 $base_padding*2;

  &:ltr {padding-left: $base_padding;}
  &:rtl {padding-right: $base_padding;}

  @if $flat {
    @include button(undecorated);
  } @else {
    @include button(normal);
  }
  &:focus,
  &:hover {
    @include button(hover);
    box-shadow: $border !important;
  }
  &:active {@include button(active);}
  &:checked {@include button(checked);}
}