$power_panel_padding: 5px;
$power_line_bg_color: transparentize($selected_bg_color, .2);
$power_line_fg_color: $fg_color;
$power_increment: .13;

@mixin power_panel_button($bg: transparentize($power_line_bg_color, $power_increment*3) ){
  -natural-hpadding: 12px;
  -minimum-hpadding: 6px;
  background-color: $bg;
  border: $power_panel_padding solid transparent;
  border-left: none;
  border-right: none;
  box-shadow: inset 0 0 0 $border_width transparent;
  border-radius: 0;
  color: $power_line_fg_color;

  &:active, &:overview, &:focus, &:checked{ @include button(active) }
  &:hover{
    @include button(hover);
    background-color: lighten($bg, 5%);
    color: lighten($power_line_fg_color, 5%);
  }
}

@mixin panel($transparent: false){
  @if $transparent {
    background-color: transparent;
    box-shadow: none;
    border: none;
    text-shadow: $text_shadow;
    StIcon{ icon-shadow: $text_shadow }
  }
  @else{
    background-color: $base_color;
  }

  .panel-button{
    @include power_panel_button();
    &.screen-recording-indicator {
      background-color: transparentize($red, .2);
      &:hover{ background-color: transparentize($red, .26) }
      &:active{ background-color: transparentize($red, .32) }
    }
    &.screen-sharing-indicator {
      background-color: transparentize($orange, .2);
      &:hover{ background-color: transparentize($orange, .26) }
      &:active{ background-color: transparentize($orange, .32) }
    }
    &.clock-display{
      background-color: transparent !important;
      box-shadow: none !important;
      border-color: transparent !important;
    }
  }

  #panelLeft{
    .clock-display{
      .clock { @include power_panel_button( transparentize($power_line_bg_color, 0)) }
      &:active .clock { @include button(checked) }
      &:hover .clock { 
        @include button(hover);
        background-color: lighten(transparentize($power_line_bg_color, 0), 5%);
        color: lighten($fg_color, 5%);
      }
    }
    .workspace-indicator{        @include power_panel_button( transparentize($power_line_bg_color, $power_increment)) }
    Gjs_ui_panel_AppMenuButton{  @include power_panel_button( transparentize($power_line_bg_color, $power_increment*2)) }

    > StBin:last-child > .panel-button {
      -natural-hpadding: 6px;
      StLabel{ margin-right: 6px; }
      border-right: $power_panel_padding solid transparent !important;
      border-radius: 0 $base_border_radius + $power_panel_padding $base_border_radius + $power_panel_padding 0;
    }
    > StBin:first-child > .panel-button .clock{
      border-left: $power_panel_padding solid transparent !important;
      border-radius: $base_border_radius + $power_panel_padding 0 0 $base_border_radius + $power_panel_padding;
    }
  }

  #panelCenter{
    > StBin {
      &:last-child {
        > .panel-button{
          border-right: $power_panel_padding solid transparent !important;
          border-radius: 0 $base_border_radius + $power_panel_padding $base_border_radius + $power_panel_padding 0;
        }
        .panel-media-controls {
          .panel-button:last-child{
            -natural-hpadding: 6px;
            border-right: $power_panel_padding solid transparent !important;
            border-radius: 0 $base_border_radius + $power_panel_padding $base_border_radius + $power_panel_padding 0;
          }
        }
      }
      &:first-child {
        > .panel-button {
          border-left: $power_panel_padding solid transparent !important;
          border-radius: $base_border_radius + $power_panel_padding 0 0 $base_border_radius + $power_panel_padding;
        }
        .panel-media-controls {
          .panel-button:first-child{
            -natural-hpadding: 6px;
            border-left: $power_panel_padding solid transparent !important;
            border-radius: $base_border_radius + $power_panel_padding 0 0 $base_border_radius + $power_panel_padding;
          }
        }
      }
      &:last-child:first-child{
        > .panel-button {
          border: $power_panel_padding solid transparent !important;
          border-radius: $base_border_radius + $power_panel_padding;
        }
      }
    }
  }

  #panelRight{
    .power-menu-panel-button{    @include power_panel_button( transparentize($power_line_bg_color, 0.0)) }
    .notification-indicator{     @include power_panel_button( transparentize($power_line_bg_color, $power_increment)) }
    Gjs_ui_panel_QuickSettings{  @include power_panel_button( transparentize($power_line_bg_color, $power_increment*2)) }

    > StBin:last-child > .panel-button {
      -natural-hpadding: 6px;
      StLabel{ margin-right: 6px; }
      border-right: $power_panel_padding solid transparent !important;
      border-radius: 0 $base_border_radius + $power_panel_padding $base_border_radius + $power_panel_padding 0;
    }
    > StBin:first-child > .panel-button{
      border-left: $power_panel_padding solid transparent !important;
      border-radius: $base_border_radius + $power_panel_padding 0 0 $base_border_radius + $power_panel_padding;
    }
  }
}

#panel {
  @include panel($transparent: false);
  &.unlock-screen,
  &:overview{ @include panel($transparent: true); }

  @if $gdm_panel_transparent {
    &.login-screen{ @include panel($transparent: true); }
  } @else {
    &.login-screen{ @include panel($transparent: false); }
  }

  &.dynamic{
    margin: $power_panel_padding;
    border-radius: $base_border_radius + max($power_panel_padding, 0);
    @include panel($transparent: true);
    > * {
      background-color: $base_color;
      border-radius: $base_border_radius + max($power_panel_padding, 0);
      box-shadow: $popover_shadow;
    }
    &:overlaps{
      @include panel($transparent: false);
      box-shadow: $popover_shadow;
    }
  }
}